var auth0;
var shopifyDomain = window.location.hostname;
var shopifyUrl = `https://${shopifyDomain}`;
var auth0Domain = '{{ settings.auth0_domain }}';
var auth0ClientId = '{{ settings.auth0_client_id }}';
var shopifyLoginPath = '/account/login';
var shopifyLogoutPath = '/account/logout';
var shopifySignupPath = '/account/register';

const emailVerificationRequestCookie = 'email_verification_sent';
const checkoutCookie = 'auth0_checkout';
const loginDataCookie = 'shopify_login_data';

var configureClient = async () => {
  auth0 = await createAuth0Client({
    domain: auth0Domain,
    client_id: auth0ClientId
  });
}

var auth0Logout = () => {
  auth0.logout({
    returnTo: shopifyUrl,
    client_id: auth0ClientId
  });
};

var expiryTimeMins = (mins) => (new Date(new Date().getTime() + mins * 60 * 1000));

var auth0Login = (opts = {}) => {
  let params = { redirect_uri: shopifyUrl };
  
  if (opts.resendVerificationEmail) {
    params['resend_verification_email'] = true;
    Cookies.set(emailVerificationRequestCookie, true, {
      path: '/',
      sameSite: 'strict',
      secure: true
    });
    
    showAccountMessage('Sending verification email...', {
    	addClass: 'verification',
      fullPage: true,
      showSpinner: true
    });
  }
    
  if (opts.checkoutUrl) {
    Cookies.set(checkoutCookie, opts.checkoutUrl, {
      expires: expiryTimeMins(5),
      sameSite: 'strict',
      secure: true
    });
  }
    
  auth0.loginWithRedirect(params);
}

var shopifyLogin = (data) => {
	return $.ajax({
    url: shopifyLoginPath,
    method: 'post',
    data: data,
    dataType: 'html',
    async: true
  });
}

const isMobile = function() {
  let check = false;
  (function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);
  return check;
}();

var showAccountMessage = (message, opts = {}) => {
  let $messageContainer = $('.auth0-account-message');
  let $message = $messageContainer.find('.text');
  
  let className = 'auth0-account-message';
  
  let css = {
    display: 'flex'
  }
    
  if (opts.fullPage) {
    css['height'] = '100vh';
    css['position'] = 'fixed';
    className += ' full-page';
  } else {
  	css['height'] = isMobile ? 'auto' : '150px';
    css['position'] = 'relative';
    css['font-size'] = '20px';
  }
    
  $messageContainer.css(css);
  
  if (opts.addClass) {
    className += ` ${opts.addClass}`;
  }
  if (opts.canHide) {
    className += ' show-hide';
  }
  if (opts.showSpinner) {
    className += ' show-spinner';
  }
  
  $messageContainer[0].className = className;
  $message.html(message);
  
  setupClickHandlers();
}

var hideAccountMessage = () => {
  let $messageContainer = $('.auth0-account-message');
  $messageContainer.css('display', 'none');
}

var clearParams = () => {
  window.history.replaceState(null, null, window.location.pathname);
}

var handleShopifyLogin = async (opts = {}) => {
  let redirectResult;

  if (opts.handleRedirectCallback) {
    redirectResult = await auth0.handleRedirectCallback().catch(error => {
      console.log(error);
    });
  }

  let isAuthenticated = await auth0.isAuthenticated();
  
  if (isAuthenticated) {
    let user = await auth0.getUser();
    
    clearParams();
        
    if (user && user.email_verified) {        
      let data = {
        'customer[email]': user.email,
        'customer[password]': user[`${shopifyUrl}/password`],
        'checkout_url': Cookies.get(checkoutCookie),
        form_type: 'customer_login',
        utf8: 'âœ“'
      };
      
      shopifyLogin(data).done(function(result) {
        let success = true;
                
        if (/<\/?[a-z][\s\S]*>/i.test(result)) {
          let parser = new DOMParser();
          let htmlDoc = parser.parseFromString(result, 'text/html');
          let link = htmlDoc.getElementsByTagName('link')[0];
          let href = link.getAttribute("href");
          
          if (['login', 'challenge'].some(s=> href.includes(s))) {
            success = false;
          }
        }
        if (success) {
          document.location.href = data['checkout_url'] || '/account';
        } else {
          redirectToOriginalLogin(data, user);
        }
      }).fail( function(jqXHR, textStatus, errorThrown) {
        redirectToOriginalLogin(data, user);
      });
    } else {
      showAccountMessage('<h1>Nearly there!</h1><h1><i class="fa fa-envelope-o"></i></h1><p>Please check your inbox for a verification email from us.</p><p>You can also <a class="resend-verification-email">request another email,</a>&nbsp;or <a class="header-logout-link">logout.</a></p>', {
        addClass: 'verification',
        canHide: true,
        fullPage: true
      });
    }
  }
}

var redirectToOriginalLogin = (data, user) => {
  let cookieVal = JSON.stringify(Object.assign({}, user, { checkout_url: data['checkout_url'] }));
  Cookies.set(loginDataCookie, cookieVal, {
    sameSite: 'strict',
    secure: true,
    expires: expiryTimeMins(1)
  });
  document.location.href = shopifyLoginPath + "?original=true";
}

// this is a backup in-case automatic login fails
var handleOriginalShopifyLogin = (opts) => {
  data = JSON.parse(Cookies.get(loginDataCookie) || '{}');
  const $form = $("#CustomerLoginForm");
  $form.find('#CustomerEmail').val(data.email);
  $form.find('#CustomerPassword').val(data[`${shopifyUrl}/password`]);
  $form.find('#CustomerEmail, #CustomerPassword, #RecoverPassword, #customer_register_link, label').hide();
  $form.find('#LoginHeading').text('Click to Continue');
  $form.find('input[type="submit"]').val('Continue');
  if (data['checkout_url']) {
    $form.find('form').prepend(`<input type="hidden" name="checkout_url" value="${data['checkout_url']}" />`);
  }
  hideAccountMessage();
}

var handleLogin = (opts = {}) => {
  if (opts.isTest) return;
  
  if (opts.auth0Callback) {
    return handleShopifyLogin({ handleRedirectCallback: true });
  } else if (opts.originalLogin) {
    return handleOriginalShopifyLogin(opts);
  } else if (opts.isSignup || opts.isLogin) {
    if (opts.checkoutUrl && (new URL(opts.checkoutUrl)).searchParams.get('step')) {
      auth0Logout();
    } else {
      auth0Login(opts);
    }
  } else if (opts.emailVerified) {
    auth0Login(opts);
  }
}

var getAccountParams = () => {
  const path = window.location.pathname;
  const hash = window.location.hash;
  const urlParams = new URLSearchParams(window.location.search);
  const emailVerificationSent = Cookies.get(emailVerificationRequestCookie);
  const isLogin = (path === shopifyLoginPath) && hash !== '#recover';
  const originalLogin = isLogin && urlParams.get('original');
  const isSignup = path === shopifySignupPath;
    
  let params = {
    emailVerified: urlParams.get('email'),
    state: urlParams.get('state'),
    code: urlParams.get('code'),
    checkoutUrl: urlParams.get('checkout_url'),
    auth0Callback: urlParams.get('state') && urlParams.get('code'),
    isLogin,
    originalLogin,
    isSignup,
    isTest: urlParams.get('test')
  }
    
  if (emailVerificationSent) {
  	params.emailVerificationSent = emailVerificationSent;
    Cookies.remove(emailVerificationRequestCookie);
  }
  
  return params;
}

function setupClickHandlers() {
  $(`[href*='${shopifyLogoutPath}'], #customer_logout_link, a.header-logout-link`).on('click', function (e) {
    $.ajax(shopifyLogoutPath).done(() => {
      auth0Logout();
    });
    return false;
  });

  $(`[href*='${shopifyLoginPath}'], #customer_login_link`).on('click', function (e) {
    auth0Login();
    return false;
  });

  $('a.resend-verification-email').on('click', function (e) {
    auth0Login({ resendVerificationEmail: true });
    return false;
  });
  
  $('a.hide-account-message').on('click', function (e) {
    hideAccountMessage();
    return false;
  });
}

window.onload = async () => {
  await configureClient();
  handleLogin(getAccountParams());
}

document.addEventListener("DOMContentLoaded", function() {
  const params = getAccountParams();
  
  if (params.isTest) return;
        
  if (params.emailVerified) {
  	showAccountMessage('Not long now...', {
      fullPage: true,
      showSpinner: true
    });
    return;
  }
  
  if (params.isLogin || params.isSignup) {
    showAccountMessage('Looking up your details...', {
      fullPage: true,
      showSpinner: true
    });
    return;
  }
  
  if (params.auth0Callback) {
  	showAccountMessage('Hold tight...', {
      fullPage: true,
      showSpinner: true
    });
    return;
  }
  
  if (params.emailVerificationSent) {
    showAccountMessage('Verification email sent! Please check your inbox.', {
      addClass: 'verification',
      fullPage: true
    });
    
    setTimeout(() => handleShopifyLogin(), 15000);
    return;
  }
  
  hideAccountMessage();
  setupClickHandlers();
});